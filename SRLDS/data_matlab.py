import numpy as np
from filtering import *
from smoother import *

S = 2
T=10
V= np.array([[-0.420712177038818,	5.21814302255085,	4.56353635981320,	-0.839740376053356,	-7.28499062958075,	1.43048294859174,	3.22146012105579,	1.25649234006580, -0.442641862368479,-6.13245776973098]])



B0 = np.array([[-0.215588236978134,0.521299045119392,0.193192470851890,1.14052322788197,-0.681254240599282], [-0.206424999620871,1.24495709045087,1.09874084031611,0.758243094802935,0.320006213254291]])
mu0v = [1.30729825904988, -0.378820218068518]
sig0v = [5,5]


mu0h = np.empty(shape = [2,5],dtype = object)
mu0h[0] = np.array([[-1.05438439728888,0.725271904691740,1.26807119435494,1.53905327162395,-1.66732247845041]])
mu0h[1] = np.array([[0.684198031705442,-1.07837816325091,-0.844164055110238,-1.20021371150247,-0.626759038329986]])






sig0h = np.empty(shape = [2,5,5], dtype = object)

sig0h[0] =np.array([[7.97129100843780e-06,	-1.49145514882941e-06,	1.96304767317250e-06,	6.93256739600019e-08,	1.95090292073016e-06],
[-1.49145514882941e-06,	1.72901171971477e-06,	-1.19659874169975e-06,	5.73517991114086e-08,	-6.22059535246021e-08],
[1.96304767317250e-06,	-1.19659874169975e-06,	3.47764248281492e-06,	-2.86683599739908e-07,	3.66810984705430e-06],
[6.93256739600019e-08,	5.73517991114086e-08,	-2.86683599739908e-07,	5.36709063744043e-08,	-2.06350786451855e-07],
[1.95090292073016e-06,	-6.22059535246021e-08,	3.66810984705430e-06,	-2.06350786451855e-07,	6.13372518042222e-06]])

sig0h[1] = np.array([[6.82159426560182e-06,	4.39495036942170e-06,	-4.96030471908946e-06,	4.72616356123863e-07,	-4.38380684106077e-06],
[4.39495036942170e-06,	3.56728400099151e-06,	-2.57938237742069e-06,	1.80752067208599e-06,	-3.15955390408389e-06],
[-4.96030471908946e-06,	-2.57938237742069e-06,	4.82864532640278e-06,	4.87414045117880e-07,	3.30920778744638e-06],
[4.72616356123863e-07,	1.80752067208599e-06,	4.87414045117880e-07,	3.56187837090441e-06,	-9.61272118365151e-07],
[-4.38380684106077e-06,	-3.15955390408389e-06,	3.30920778744638e-06,	-9.61272118365151e-07,	3.62855674428687e-06]])



A = np.empty(shape = [2,5,5], dtype = object)

A[0] =  np.array([[-0.290902821690447,	1.82087684189190,	1.76927798630892,	0.810864713167656,	1.83126114871225],
[1.52212624449042,	0.477705513815797,	-0.457389674200308,	-0.00154228682572721,	0.898760569738768],
[-0.991075712188939,	0.155646737654130,	0.916028253829088,	1.24201194102441,	-0.252085457536352],
[0.481803481717920,	0.752094068623784,	0.234844329685981,	0.824180712413976,	0.406751062623081],
[0.00766499610236511,	-1.19928011771925,	1.31612500279338,	-0.544530900157892,	0.332370484169664]])

A[1] = np.array([[2.10178928147088,	-0.630583403071973,	0.759068735802659,	1.00170330255034,	0.640909058225743],
[-1.28644824201178,	-0.330433486015582,	-0.388197457286111,	0.450548748533192,	-0.263363792801772],
[-0.556907394030491,	1.07614348175951,	0.944691264477584,	-0.549241808168823,	-1.08224731574405],
[3.01308025657875,	1.09534611323968,	0.343022533662111,	0.558689875548338,	0.711986416445184],
[0.134913741463564,	1.43171419411589,	-1.22906771532905,	0.248861352449749,	0.231516044531180]])

B1 = np.empty(shape = [2,5],dtype = object)
B1[0] = np.array([[0.789754892877746,-0.255623232568041,0.351647104878831,-0.0381332363408924,-0.576256430472176]])
B1[1] = np.array([[-1.35877060654138,-0.0732414526367312,0.310741966227571,-1.37611007539387,-0.932165327844160]])

mu1v = np.array([-0.250044394923240,	0.503512514801166])
sig1v = np.array([5,5])

mu1h = np.empty(shape = [2,5],dtype = object)
mu1h[0] = np.array([[0.926010712523901,-0.967495506230013,0.395523065707558,-0.590721953258524,0.561633353213552]])
mu1h[1] = np.array([[-0.120109493482377,-0.348688567360682,0.451731227362369,-0.958070667996814,-1.01154154210224]])


sig1h = np.empty(shape = [2,5,5],dtype = object)
sig1h[0] = np.array([[6.52112544866495e-06,	1.80037725643938e-06,	-1.96843221921645e-06,	4.48637485352991e-06,	-6.70969840526738e-07],
[1.80037725643938e-06,	2.26587845726619e-06,	-1.22447534900943e-06,	1.87804378273858e-06,	-3.82016507014631e-07],
[-1.96843221921645e-06,	-1.22447534900943e-06,	2.12881307512630e-06,	-2.32973676385946e-06,	8.12888203838580e-07],
[4.48637485352991e-06,	1.87804378273858e-06,	-2.32973676385946e-06,	8.48069956982966e-06,	-9.96508744134937e-07],
[-6.70969840526738e-07,	-3.82016507014631e-07,	8.12888203838580e-07,	-9.96508744134937e-07,	3.31532830313512e-07]])
sig1h[1] = np.array([[4.38132702577706e-06,	-1.41519735498849e-06,	5.63019466450926e-08,	-3.15358162955196e-07,	-8.59198904537871e-07],
[-1.41519735498849e-06,	3.87691990123602e-06,	-6.08776265759172e-07,	-5.05173655562126e-08,	5.57274147788689e-07],
[5.63019466450926e-08,	-6.08776265759172e-07,	3.48903962547463e-06,	1.82543294562881e-06,	1.77762622503292e-07],
[-3.15358162955196e-07,	-5.05173655562126e-08,	1.82543294562881e-06,	1.38796811708583e-06,	3.10808378579071e-07],
[-8.59198904537871e-07,	5.57274147788689e-07,	1.77762622503292e-07,	3.10808378579071e-07,	2.77210480697599e-07]])


pstgstm1ctm1 = np.empty(shape = [2,2,2])
pstgstm1ctm1[:,:,0] = np.array([[0.5637,    0.4362],[0.4363,    0.5638]])
pstgstm1ctm1[:,:,1] = np.array([[1,    1.0000e-06],[1.0000e-06,    1]])


ps1 = np.array([[.964, .036]])


muh1 = np.empty(shape = [2,5],dtype = object)
muh1[0] = np.array([[0.587487108572585,2.16273731956018,-0.389127666303293,-0.305074183575832,-0.420872040247875]])
muh1[1] = np.array([[0.902472775318841,0.132158761027464,1.87349676913374,0.548899148325099,1.83295939609296]])


sigh1 = np.empty(shape = [2,5,5])
sigh1[0] = np.array([[3.14556273781812e-06,	-1.42758620822157e-06,	9.16339533303629e-07,	-1.26341101154772e-06,	-8.82406464519902e-07],
[-1.42758620822157e-06,	1.52608352437036e-06,	-3.05276677463001e-06,	4.67828964013083e-07,	3.42681738134207e-07],
[9.16339533303629e-07,	-3.05276677463001e-06,	9.59692025550074e-06,	5.08480056978927e-07,	2.80423959449785e-07],
[-1.26341101154772e-06,	4.67828964013083e-07,	5.08480056978927e-07,	9.20374556727763e-07,	6.30801080867599e-07],
[-8.82406464519902e-07,	3.42681738134207e-07,	2.80423959449785e-07,	6.30801080867599e-07,	4.36924563108976e-07]])

sigh1[1] = np.array([[7.72736856659723e-06,	2.69208494682116e-08,	2.07368998503169e-06,	2.47505157718012e-06,	3.45208849116890e-07],
[2.69208494682116e-08,	2.55592833899960e-06,	1.73680981855293e-06,	9.79868921185056e-07,	-1.40658002398210e-07],
[2.07368998503169e-06,	1.73680981855293e-06,	2.90719000169515e-06,	7.00101470805220e-07,	-2.55287212636947e-08],
[2.47505157718012e-06,	9.79868921185056e-07,	7.00101470805220e-07,	1.55300759178839e-06,	-1.31446952057559e-09],
[3.45208849116890e-07,	-1.40658002398210e-07,	-2.55287212636947e-08,	-1.31446952057559e-09,	1.03796863700028e-07]])




class P_testing():
     #p.B1, p.mu1v, p.sig1v, p.mu1h, p.sig1h, p.pstgstm1ctm1, p.ps1, p.muh1, p.sigh1
    def __init__(self, B0, mu0v,sig0v,mu0h,sig0h,A,B1,mu1v,sig1v,mu1h,sig1h,pstgstm1ctm1,ps1,muh1,sigh1):
        self.B0 = B0
        self.mu0v = mu0v
        self.sig0v = sig0v
        self.mu0h = mu0h
        self.sig0h = sig0h
        self.A = A
        self.B1 = B1
        self.mu1v = mu1v
        self.sig1v = sig1v
        self.mu1h = mu1h
        self.sig1h = sig1h
        self.pstgstm1ctm1 = pstgstm1ctm1
        self.ps1 = ps1
        self.muh1 = muh1
        self.sigh1 = sigh1

p = P_testing(B0, mu0v,sig0v,mu0h,sig0h,A,B1,mu1v,sig1v,mu1h,sig1h,pstgstm1ctm1,ps1,muh1,sigh1)

f, F, w, alpha, loglik, reset_prob = filtering(p,V,2)

x,beta = RTSLinearSmoother(p,V,f,F,w,2)
print(x)
mass_aprox = np.zeros(shape = [S,T])
print('-----')
for t in range(T):
    for s in range(S):
        print(sum(sum(x[t][s])))
        #mass_aprox[s, t] =
        #mass_aprox[s,t] = sum(sum(x[t][s])) if sum(sum(x[t][s])) <=1 else 1
        mass_aprox[s, t] = sum(sum(x[t][s]))
print(mass_aprox)
print(np.sum(mass_aprox,axis = 0))





import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
import pandas as pd

# Data
r = range(T)
raw_data = {'State 0': mass_aprox[0], 'State 1': mass_aprox[1]}
df = pd.DataFrame(raw_data)

# From raw value to percentage
totals = [i + j for i, j in zip(df['State 0'], df['State 1'])]
greenBars = [i / j * 100 for i, j in zip(df['State 0'], totals)]
orangeBars = [i / j * 100 for i, j in zip(df['State 1'], totals)]


# plot
barWidth = 1
names = ('A', 'B', 'C', 'D', 'E')
# Create green Bars
plt.bar(r, greenBars, color='#b5ffb9', edgecolor='white', width=barWidth)
# Create orange Bars
plt.bar(r, orangeBars, bottom=greenBars, color='#f9bc86', edgecolor='white', width=barWidth)
# Create blue Bars


# Custom x axis
plt.xticks(r, names)
plt.xlabel("group")

# Show graphic
plt.show()


